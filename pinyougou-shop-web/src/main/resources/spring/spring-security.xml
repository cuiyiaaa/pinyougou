<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- 配置不拦截的资源 -->
	<!-- 根目录下的html直接放行 -->
	<http pattern="/*.html" security="none" />
	<http pattern="/css/**" security="none" />
	<http pattern="/img/**" security="none" />
	<http pattern="/js/**" security="none" />
	<http pattern="/plugins/**" security="none" />
	<!-- 放行商家入住，否则无法添加 -->
	<http pattern="/seller/add.do" security="none" />

	<!-- 页面的拦截规则 use-expressions是否启动SPEL表达式，true为缺省值 -->
	<http use-expressions="false">
		<!-- /*：当前根目录下的文件，不包括子文件 /**：当前目录下的所有资源 access：可以访问的角色名称(必须以ROLE_开头) -->
		<intercept-url pattern="/**" access="ROLE_SELLER" />
		<!--开启表达登录功能 -->
		<form-login always-use-default-target="true"
			login-page="/shoplogin.html" default-target-url="/admin/index.html"
			authentication-failure-url="/shoplogin.html" />

		<!--关闭跨域 -->
		<csrf disabled="true" />

		<!-- 配置允许在页面使用 ifmare标签引入其他页面 -->
		<headers>
			<frame-options policy="SAMEORIGIN" />
		</headers>

		<!-- 会默认生成一个 /logout地址，进行退出登录 -->
		<logout logout-success-url="/shoplogin.html"
			invalidate-session="true" />
	</http>

	<!-- 认证管理器 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider
			user-service-ref="userDetailsService">
			<!-- 配置加密方式 -->
			<password-encoder ref="bcryptEncoder"></password-encoder>
		</authentication-provider>
	</authentication-manager>


	<!-- 配置加密类 -->
	<beans:bean id="bcryptEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>

	<!-- 配置userDetailService -->
	<beans:bean id="userDetailsService" class="com.pinyougou.service.UserDetailsService">
		<beans:property name="sellerService" ref="sellerService"></beans:property>
	</beans:bean>

	<!--通过接口从dubbox中获取对应的实现类Bean -->
	<dubbo:application name="pinyougou-shop-web" />
	<dubbo:registry
		address="zookeeper://192.168.25.128:2181" />
	<dubbo:reference id="sellerService"
		interface="com.pinyougou.sellergoods.service.SellerService"></dubbo:reference>
</beans:beans>




















